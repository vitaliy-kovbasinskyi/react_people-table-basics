{"version":3,"sources":["components/Navigation/Navigation.tsx","api.ts","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/PersonInfo/PersonInfo.tsx","components/PeopleList/PeopleList.tsx","components/PeoplePage/PeoplePage.tsx","App.tsx","index.tsx"],"names":["Navigation","selectedLinkHandler","resetPeopleFromServer","className","role","isActive","classnames","to","onClick","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PersonLink","parent","people","selectedRow","person","useState","typeOFLink","setTypeOfLink","linkSlug","setLinkSlug","classForWoman","find","human","name","sex","findParentSlug","useEffect","findParentName","slug","findParent","classNames","PersonInfo","selectedHuman","selectedPerson","born","died","motherName","fatherName","PeopleList","setSelectedPerson","personSlag","length","map","PeoplePage","loader","setLoader","noPeople","setNoPeople","noPeopleOnServer","App","selectedNavLink","setSelectedNavLink","peopleFromServer","setPeopleFromServer","fetchPeopleFromServer","navPage","path","element","index","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.e64f6cc0.chunk.js","sourcesContent":["import classnames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\ntype Props = {\n  selectedLinkHandler: (navPage: string) => void\n  resetPeopleFromServer: () => void\n};\n\nexport const Navigation: React.FC<Props> = ({\n  selectedLinkHandler,\n  resetPeopleFromServer,\n}) => {\n  const navigationHome = () => {\n    selectedLinkHandler('Home');\n    resetPeopleFromServer();\n  };\n\n  const navigationPeople = () => {\n    selectedLinkHandler('People');\n  };\n\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            className={({ isActive }) => classnames('navbar-item', {\n              'has-background-grey-lighter': isActive,\n            })}\n            to=\"/\"\n            onClick={navigationHome}\n          >\n            Home\n          </NavLink>\n          <NavLink\n            className={({ isActive }) => classnames('navbar-item', {\n              'has-background-grey-lighter': isActive,\n            })}\n            to=\"/people\"\n            onClick={navigationPeople}\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classNames from 'classnames';\nimport { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types';\n\ntype Props = {\n  parent: string | null\n  people: Person[]\n  selectedRow: (personSlag: string) => void\n  person: Person\n};\n\nexport const PersonLink: React.FC<Props> = ({\n  parent,\n  people,\n  selectedRow,\n  person,\n}) => {\n  const [typeOFLink, setTypeOfLink] = useState<string | null>(null);\n  const [linkSlug, setLinkSlug] = useState('');\n\n  const classForWoman = people.find(\n    human => human.name === parent,\n  )?.sex === 'f';\n\n  const findParent = () => {\n    if (parent === null) {\n      setTypeOfLink(null);\n    }\n\n    const findParentName = people.find(human => human.name === parent)?.slug;\n\n    if (typeof findParentName === 'string') {\n      setTypeOfLink('linked');\n      setLinkSlug(findParentName);\n    } else {\n      setTypeOfLink('stringOnly');\n    }\n  };\n\n  const findParentSlug: Person\n    = people.find(human => human.name === parent) || person;\n\n  useEffect(() => {\n    findParent();\n  }, [typeOFLink]);\n\n  return (\n    <>\n      {typeOFLink === 'linked' ? (\n        <Link\n          to={`/people/${linkSlug}`}\n          className={classNames(\n            {\n              'has-text-danger': classForWoman,\n            },\n          )}\n          onClick={() => {\n            selectedRow(findParentSlug.slug);\n          }}\n        >\n          {parent}\n        </Link>\n      ) : (\n        <>\n          {parent || '-'}\n        </>\n      )}\n    </>\n  );\n};\n","import classNames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink';\n\ntype Props = {\n  person: Person\n  people: Person[]\n  selectedPerson: string\n  selectedRow: (personSlag: string) => void\n};\n\nexport const PersonInfo: React.FC<Props> = ({\n  person,\n  people,\n  selectedRow,\n  selectedPerson,\n}) => {\n  const selectedHuman = selectedPerson === person.slug;\n  const {\n    sex, born, died, name, slug, motherName, fatherName,\n  } = person;\n\n  return (\n    <tr\n      data-cy=\"person\"\n      key={slug}\n      className={classNames({ 'has-background-warning': selectedHuman })}\n    >\n      <td>\n        <Link\n          to={`/people/${slug}`}\n          className={classNames(\n            { 'has-text-danger': person.sex === 'f' },\n          )}\n          onClick={() => {\n            selectedRow(slug);\n          }}\n        >\n          {name}\n        </Link>\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      <td>\n        <PersonLink\n          parent={motherName}\n          people={people}\n          selectedRow={selectedRow}\n          person={person}\n        />\n      </td>\n      <td>\n        <PersonLink\n          parent={fatherName}\n          people={people}\n          selectedRow={selectedRow}\n          person={person}\n        />\n      </td>\n    </tr>\n  );\n};\n","import { useState } from 'react';\nimport { Person } from '../../types';\nimport { PersonInfo } from '../PersonInfo';\n\ntype Props = {\n  people: Person[]\n};\n\nexport const PeopleList: React.FC<Props> = ({ people }) => {\n  const [selectedPerson, setSelectedPerson] = useState('');\n\n  const selectedRow = (personSlag: string) => {\n    setSelectedPerson(personSlag);\n  };\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      {people.length > 0 && (\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Sex</th>\n            <th>Born</th>\n            <th>Died</th>\n            <th>Mother</th>\n            <th>Father</th>\n          </tr>\n        </thead>\n      )}\n\n      <tbody>\n        {people.map(person => (\n          <PersonInfo\n            key={person.slug}\n            person={person}\n            people={people}\n            selectedPerson={selectedPerson}\n            selectedRow={selectedRow}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { Person } from '../../types';\nimport { Loader } from '../Loader';\nimport { PeopleList } from '../PeopleList';\n\ntype Props = {\n  people: Person[]\n};\n\nexport const PeoplePage: React.FC<Props> = ({ people }) => {\n  const [loader, setLoader] = useState(false);\n  const [noPeople, setNoPeople] = useState(false);\n\n  const noPeopleOnServer = noPeople && people.length === 0;\n\n  const loaderHandler = () => {\n    setLoader(true);\n\n    setTimeout(() => {\n      setLoader(false);\n      setNoPeople(true);\n    }, 500);\n  };\n\n  useEffect(() => {\n    loaderHandler();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {loader ? (\n            <Loader />\n          ) : (\n            <>\n              <PeopleList people={people} />\n              {noPeopleOnServer && (\n                <p data-cy=\"noPeopleMessage\">\n                  There are no people on the server\n                </p>\n              )}\n            </>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport './App.scss';\nimport {\n  Navigate, Route, Routes,\n} from 'react-router-dom';\nimport { Navigation } from './components/Navigation/Navigation';\nimport { Person } from './types';\nimport { getPeople } from './api';\nimport { PeoplePage } from './components/PeoplePage';\n\nexport const App: React.FC = () => {\n  const [selectedNavLink, setSelectedNavLink] = useState('People');\n  const [peopleFromServer, setPeopleFromServer] = useState<Person[]>([]);\n\n  const resetPeopleFromServer = () => {\n    setPeopleFromServer([]);\n  };\n\n  const fetchPeopleFromServer = async () => {\n    setPeopleFromServer([]);\n    const people: Person[] = await getPeople();\n\n    setPeopleFromServer(people);\n  };\n\n  const selectedLinkHandler = (navPage: string) => {\n    setSelectedNavLink(navPage);\n  };\n\n  useEffect(() => {\n    if (selectedNavLink === 'People') {\n      fetchPeopleFromServer();\n    }\n  }, [selectedNavLink]);\n\n  return (\n    <div data-cy=\"app\">\n      <Navigation\n        selectedLinkHandler={selectedLinkHandler}\n        resetPeopleFromServer={resetPeopleFromServer}\n      />\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route\n              path=\"/\"\n              element={\n                <h1 className=\"title\">Home Page</h1>\n              }\n            />\n            <Route path=\"people\">\n              <Route\n                index\n                element={(\n                  <PeoplePage\n                    people={peopleFromServer}\n                  />\n                )}\n              />\n              <Route\n                path=\":personSlag\"\n                element={(\n                  <PeoplePage\n                    people={peopleFromServer}\n                  />\n                )}\n              />\n            </Route>\n\n            <Route\n              path=\"home\"\n              element={<Navigate to=\"/\" replace />}\n            />\n            <Route\n              path=\"*\"\n              element={<h1 className=\"title\">Page not found</h1>}\n            />\n          </Routes>\n\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}